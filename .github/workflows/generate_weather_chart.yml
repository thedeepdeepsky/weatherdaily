name: Generate Weather Chart

on:
  # Option 1: Run on a schedule (e.g., 15 minutes after the fetch workflow)
  schedule:
    - cron: '15 16 * * *' # Runs daily at 00:15 UTC

  # Option 2: Trigger after the fetch workflow completes (if they are in the same repo)
  # workflow_run:
  #   workflows: ["Fetch Weather Data"] # Name of the first workflow
  #   types:
  #     - completed

  # Option 3: Allow manual triggering
  workflow_dispatch:

jobs:
  build_chart:
    # Only run if the triggering workflow (if using workflow_run) was successful
    # if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      # Need read permission for workflow_run trigger, write for committing
      actions: read
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # If using workflow_run, checkout the specific commit that triggered this run
        # with:
        #   ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or your preferred Python version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install matplotlib pandas # Install required libraries

      - name: Generate weather chart
        run: |
          set -e # Exit immediately if the script fails
          python plot_weather.py # Execute the plotting script

      - name: Commit and push chart
        run: |
          set -e
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          OUTPUT_CHART="weather_chart.png"

          # Check if the chart file exists first
          if [ ! -f "$OUTPUT_CHART" ]; then
            echo "Error: Chart file '$OUTPUT_CHART' was not generated by the script."
            exit 1
          fi

          # Check git status. If there are no changes to the chart, exit gracefully.
          # Use --no-index if the file might be new and not tracked yet for the first diff check
          # But since checkout happens first, a simple diff should work if the file exists
          git add "$OUTPUT_CHART" # Stage the chart first to handle new/modified cases easily
          if git diff --staged --quiet "$OUTPUT_CHART"; then
            echo "No changes detected in $OUTPUT_CHART. Nothing to commit."
            # Unstage if no changes to avoid empty commit if other non-related changes exist
            git reset "$OUTPUT_CHART"
            exit 0 # Exit successfully
          fi

          # If there are changes, commit and push
          echo "Changes detected in $OUTPUT_CHART. Committing..."
          # Commit only the chart file
          git commit -m "Update weather chart - $(date -u +'%Y-%m-%d %H:%M:%S UTC')" -- "$OUTPUT_CHART"
          git push
