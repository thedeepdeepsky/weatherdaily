name: Generate Weather Charts # Renamed for clarity

on:
  schedule:
    - cron: '15 16 * * *' # Runs daily at 00:15 UTC (adjust timing as needed relative to fetch)
  # workflow_run:
  #   workflows: ["Fetch Weather Data"]
  #   types:
  #     - completed
  workflow_dispatch:

jobs:
  build_charts: # Renamed job for clarity
    # if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read # Needed for workflow_run trigger
      contents: write # Needed to commit files
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # with:
        #   ref: ${{ github.event.workflow_run.head_sha }} # Use if using workflow_run

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install matplotlib pandas

      - name: Generate weather charts # Updated name
        run: |
          set -e
          python plot_weather.py

      - name: Commit and push charts # Updated name
        run: |
          set -e
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # List all potential chart files generated by the script
          # Make sure these match the output filenames in plot_weather.py
          CHART_FILES="temperature_chart.png cloud_cover_total_chart.png cloud_cover_low_chart.png cloud_cover_mid_chart.png cloud_cover_high_chart.png"
          FILES_TO_COMMIT="" # Accumulate files that actually exist

          echo "Checking for generated chart files..."
          for file in $CHART_FILES; do
            if [ -f "$file" ]; then
              echo "Found: $file"
              FILES_TO_COMMIT="$FILES_TO_COMMIT $file"
            else
              echo "Warning: Expected chart file '$file' not found. It will not be committed."
            fi
          done

          if [ -z "$FILES_TO_COMMIT" ]; then
             echo "No chart files found to commit. Exiting."
             exit 0
          fi

          echo "Files to potentially commit:$FILES_TO_COMMIT" # Note: Leading space is ok for git add

          # Stage all existing generated chart files
          # Use xargs to handle potential filename issues and command length limits
          echo "$FILES_TO_COMMIT" | xargs git add

          # Check if any of the staged files have changes
          if git diff --staged --quiet; then
            echo "No changes detected in the staged chart files. Nothing to commit."
            exit 0 # Exit successfully
          fi

          # If there are changes, commit and push
          echo "Changes detected in chart files. Committing..."
          # Commit only the staged chart files
          git commit -m "Update weather charts - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push
