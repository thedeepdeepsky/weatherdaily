name: Fetch Weather Data

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs the workflow automatically every day at midnight UTC
  schedule:
    - cron: '0 16 * * *' # Runs daily at 00:00 UTC

jobs:
  fetch_and_commit_weather:
    runs-on: ubuntu-latest
    permissions:
      # Need write permissions to commit code back to the repository
      contents: write
    steps:
      - name: Checkout repository
        # Checks out your repository under $GITHUB_WORKSPACE, so your workflow can access it
        uses: actions/checkout@v4

      - name: Fetch weather data
        # Use curl to make the GET request and save the output directly to a file
        # -s: Silent mode (don't show progress)
        # -L: Follow redirects
        # -o: Output file name
        run: |
          set -e # Exit immediately if a command exits with a non-zero status.
          API_URL="https://api.open-meteo.com/v1/forecast?latitude=31.2222&longitude=121.4581&daily=weather_code,temperature_2m_max,temperature_2m_min,apparent_temperature_max,apparent_temperature_min,temperature_2m_mean,apparent_temperature_mean,cloud_cover_mean,cloud_cover_max,cloud_cover_min,dew_point_2m_mean,dew_point_2m_max,dew_point_2m_min,et0_fao_evapotranspiration_sum,growing_degree_days_base_0_limit_50,leaf_wetness_probability_mean,precipitation_probability_mean,precipitation_probability_min,relative_humidity_2m_mean,relative_humidity_2m_max,relative_humidity_2m_min,snowfall_water_equivalent_sum,pressure_msl_mean,pressure_msl_min,pressure_msl_max,surface_pressure_mean,surface_pressure_max,surface_pressure_min,updraft_max,winddirection_10m_dominant,wind_gusts_10m_mean,wind_speed_10m_mean,wind_gusts_10m_min,wind_speed_10m_min,sunrise,sunset,daylight_duration,sunshine_duration,uv_index_clear_sky_max,uv_index_max,rain_sum,showers_sum,snowfall_sum,precipitation_sum,precipitation_hours,precipitation_probability_max,wind_speed_10m_max,wind_gusts_10m_max,wind_direction_10m_dominant,shortwave_radiation_sum,et0_fao_evapotranspiration&hourly=temperature_2m,relative_humidity_2m,dew_point_2m,apparent_temperature,precipitation_probability,precipitation,rain,showers,snowfall,snow_depth,weather_code,pressure_msl,surface_pressure,cloud_cover,cloud_cover_low,cloud_cover_mid,visibility,cloud_cover_high,evapotranspiration,et0_fao_evapotranspiration,vapour_pressure_deficit,wind_speed_10m,wind_speed_80m,wind_speed_180m,wind_speed_120m,wind_direction_10m,wind_direction_80m,wind_direction_120m,wind_direction_180m,wind_gusts_10m,temperature_80m,temperature_120m,temperature_180m,soil_temperature_0cm,soil_temperature_18cm,soil_temperature_6cm,soil_temperature_54cm,soil_moisture_0_to_1cm,soil_moisture_1_to_3cm,soil_moisture_3_to_9cm,soil_moisture_9_to_27cm,soil_moisture_27_to_81cm,uv_index,uv_index_clear_sky,sunshine_duration,total_column_integrated_water_vapour,lifted_index&timezone=auto"
          OUTPUT_FILE="weather_data.json"
          echo "Fetching weather data from $API_URL"
          curl -sL "$API_URL" -o "$OUTPUT_FILE"
          echo "Weather data saved to $OUTPUT_FILE"
          # Optional: Add a small delay in case the API has rate limits or eventual consistency
          # sleep 5

      - name: Commit and push if data changed
        # Configure git user
        # Check if the output file has changes compared to the last commit
        # If yes, add, commit, and push the file
        run: |
          set -e # Exit immediately if a command exits with a non-zero status.
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          OUTPUT_FILE="weather_data.json"

          # Check git status. If there are no changes to the file, exit gracefully.
          

          # If there are changes, add, commit, and push
          echo "Changes detected in $OUTPUT_FILE. Committing..."
          git add "$OUTPUT_FILE"
          # Use date command to include the update time in the commit message
          git commit -m "Update weather data for Shanghai - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          git push
